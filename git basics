git init
git status
git add filename
git status
git commit -m "message heere" [Notice how Git says changes to be committed? The files listed here are in the Staging Area, and they are not in our repository yet. We could add or remove files from the stage before we store them in the repository.]
git add '*.extension'
git status
git commit -m "Message here for all the files"
git log for history
git remote add origin remote-repository-url-here [origin is the remote repository name it could be anything we want]
git push -u origin master [-u tells Git to remember the parameters, so that next time we can simply run git push and Git will know what to do]
git pull origin master [other people have pulled your changes, made their own commits, and pushed them.We can check for changes on our GitHub repo and pull down any new changes by running this]
git diff HEAD [what is different from our last commit by using the git diff command.(HEAD-most recent commit)]
git diff --staged [to see the changes you just staged.]
git reset filename OR git reset folder/filename [You can unstage files by using the git reset command]
git checkout --filename  [Files can be changed back to how they were at the last commit ]
git branch branchname [create a copy (aka. branch) of their code they can make separate commits to]
git checkout branchname [switch to branchname]
git rm 'filname OR *.extension' [remove the actual files from disk, but will also stage the removal of the files for us.]
git commit -m "Message" [commit branch changes]
git checkout master [switch back to the master branch so you can copy (or merge) your changes from the clean_up branch back into the master which is the local branch branch.]
git merge branchname [the copy branch we made, it will merge it our local master branch]
git branch -d <branch name> [to delete a branch]
git push
